{"remainingRequest":"E:\\gitProjectFront\\Dormitory_frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\gitProjectFront\\Dormitory_frontend\\src\\utils\\request.js","dependencies":[{"path":"E:\\gitProjectFront\\Dormitory_frontend\\src\\utils\\request.js","mtime":1748424148000},{"path":"E:\\gitProjectFront\\Dormitory_frontend\\babel.config.js","mtime":1748424148000},{"path":"E:\\gitProjectFront\\Dormitory_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1751446657759},{"path":"E:\\gitProjectFront\\Dormitory_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1751446653586}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKY29uc3QgcmVxdWVzdCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogJy9hcGknLAogIC8vIOazqOaEj++8ge+8gSDov5nph4zmmK/lhajlsYDnu5/kuIDliqDkuIrkuoYgJy9hcGknIOWJjee8gO+8jOS5n+WwseaYr+ivtOaJgOacieaOpeWPo+mDveS8muWKoOS4iicvYXBpJ+WJjee8gOWcqO+8jOmhtemdoumHjOmdouWGmeaOpeWPo+eahOaXtuWAmeWwseS4jeimgeWKoCAnL2FwaSfkuobvvIzlkKbliJnkvJrlh7rnjrAy5LiqJy9hcGkn77yM57G75Ly8ICcvYXBpL2FwaS91c2VyJ+i/meagt+eahOaKpemUme+8jOWIh+iusO+8ge+8ge+8gQogIHRpbWVvdXQ6IDUwMDAKfSk7CmxldCB0b2tlbiA9ICcnOwovLyByZXF1ZXN0IOaLpuaIquWZqAovLyDlj6/ku6Xoh6ror7fmsYLlj5HpgIHliY3lr7nor7fmsYLlgZrkuIDkupvlpITnkIYKLy8g5q+U5aaC57uf5LiA5YqgdG9rZW7vvIzlr7nor7fmsYLlj4LmlbDnu5/kuIDliqDlr4YKLy/mt7vliqDkuIDkuKror7fmsYLmi6bmiKrlmagKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBsZXQgdXNlciA9IEpTT04ucGFyc2Uod2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzcy11c2VyJykpOwogIGlmICh1c2VyKSB7CiAgICB0b2tlbiA9IHVzZXIudG9rZW47CiAgfQogIGNvbmZpZy5oZWFkZXJzLmNvbW1vblsndG9rZW4nXSA9IHRva2VuOwogIC8vY29uc29sZS5kaXIoY29uZmlnKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAvLyBEbyBzb21ldGhpbmcgd2l0aCByZXF1ZXN0IGVycm9yCiAgY29uc29sZS5pbmZvKCJlcnJvcjogIik7CiAgY29uc29sZS5pbmZvKGVycm9yKTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKCi8vIHJlc3BvbnNlIOaLpuaIquWZqAovLyDlj6/ku6XlnKjmjqXlj6Plk43lupTlkI7nu5/kuIDlpITnkIbnu5PmnpwKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKHJlc3BvbnNlID0+IHsKICBsZXQgcmVzID0gcmVzcG9uc2UuZGF0YTsKICAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKICBpZiAocmVzcG9uc2UuY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ2Jsb2InKSB7CiAgICByZXR1cm4gcmVzOwogIH0KICAvLyDlhbzlrrnmnI3liqHnq6/ov5Tlm57nmoTlrZfnrKbkuLLmlbDmja4KICBpZiAodHlwZW9mIHJlcyA9PT0gJ3N0cmluZycpIHsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9CiAgcmV0dXJuIHJlczsKfSwgZXJyb3IgPT4gewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKCi8vIOS7pXJlcXVlc3TmmrTpnLLlh7rljrsKZXhwb3J0IGRlZmF1bHQgcmVxdWVzdDs="},{"version":3,"names":["axios","request","create","baseURL","timeout","token","interceptors","use","config","user","JSON","parse","window","sessionStorage","getItem","headers","common","error","console","info","Promise","reject","response","res","data","responseType","log"],"sources":["E:/gitProjectFront/Dormitory_frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\n\nconst request = axios.create({\n    baseURL: '/api',  // 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上'/api'前缀在，页面里面写接口的时候就不要加 '/api'了，否则会出现2个'/api'，类似 '/api/api/user'这样的报错，切记！！！\n    timeout: 5000\n})\nlet token = '';\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n//添加一个请求拦截器\naxios.interceptors.request.use(function (config) {\n    let user = JSON.parse(window.sessionStorage.getItem('access-user'));\n    if (user) {\n        token = user.token;\n    }\n    config.headers.common['token'] = token;\n    //console.dir(config);\n    return config;\n}, function (error) {\n    // Do something with request error\n    console.info(\"error: \");\n    console.info(error);\n    return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n// 以request暴露出去\nexport default request\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,MAAM;EAAG;EAClBC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,IAAIC,KAAK,GAAG,EAAE;AACd;AACA;AACA;AACA;AACAL,KAAK,CAACM,YAAY,CAACL,OAAO,CAACM,GAAG,CAAC,UAAUC,MAAM,EAAE;EAC7C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACnE,IAAIL,IAAI,EAAE;IACNJ,KAAK,GAAGI,IAAI,CAACJ,KAAK;EACtB;EACAG,MAAM,CAACO,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC,GAAGX,KAAK;EACtC;EACA,OAAOG,MAAM;AACjB,CAAC,EAAE,UAAUS,KAAK,EAAE;EAChB;EACAC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;EACvBD,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;EACnB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA;AACAhB,OAAO,CAACK,YAAY,CAACgB,QAAQ,CAACf,GAAG,CAC7Be,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAIF,QAAQ,CAACd,MAAM,CAACiB,YAAY,KAAK,MAAM,EAAE;IACzC,OAAOF,GAAG;EACd;EACA;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzBA,GAAG,GAAGA,GAAG,GAAGb,IAAI,CAACC,KAAK,CAACY,GAAG,CAAC,GAAGA,GAAG;EACrC;EACA,OAAOA,GAAG;AACd,CAAC,EACDN,KAAK,IAAI;EACLC,OAAO,CAACQ,GAAG,CAAC,KAAK,GAAGT,KAAK,CAAC,EAAC;EAC3B,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,eAAehB,OAAO","ignoreList":[]}]}